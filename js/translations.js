        // Translations and configurations
        const translations = {
            en: {
                pageTitle: "Gaigle - AI-Powered Search",
                searchPlaceholder: "Search with Gaigle...",
                loadingText: "Searching with AI...",
                quickAnswer: "Quick Answer",
                noResults: "No results found. Try a different query.",
                errorMessage: "An unknown error occurred while searching. Please try again.",
                networkError: "Network error. Please check your internet connection.",
                apiError: "API server error. Please try again later.",
                apiTimeout: "The server is taking too long to respond",
                invalidRequest: "Invalid search query",
                serverError: "Server is currently unavailable",
                rateLimitExceeded: "Too many requests. Please wait before trying again.",
                switchToRussian: "Русский",
                switchToEnglish: "English",
                loadMore: "More",
                makeLonger: "Make longer",
                customPrompt: "Ask a follow-up question...",
                rateLimitWarning: "Too many requests! Please wait 15 seconds before searching again.",
                rateLimitSlowdown: "Too many requests! You can now make 1 request every 3 seconds.",
                disclaimer: "This site is not affiliated with or produced by Google Corporation. All answers are generated by AI and may not be 100% accurate."
            },
            ru: {
                pageTitle: "Gaigle - Поиск с ИИ",
                searchPlaceholder: "Поиск с помощью Gaigle...",
                loadingText: "Ищем с помощью ИИ...",
                quickAnswer: "Быстрый ответ",
                noResults: "Ничего не найдено. Попробуйте другой запрос.",
                errorMessage: "Произошла ошибка при поиске. Пожалуйста, попробуйте ещё раз.",
                networkError: "Ошибка сети. Пожалуйста, проверьте интернет-соединение.",
                apiError: "Ошибка сервера API. Пожалуйста, попробуйте позже.",
                apiTimeout: "Сервер слишком долго отвечает",
                invalidRequest: "Некорректный поисковый запрос",
                serverError: "Сервер временно недоступен",
                rateLimitExceeded: "Слишком много запросов. Пожалуйста, подождите перед повторной попыткой.",
                switchToRussian: "Русский",
                switchToEnglish: "English",
                loadMore: "Ещё",
                makeLonger: "Длиннее",
                customPrompt: "Уточняющий вопрос...",
                rateLimitWarning: "Слишком много запросов! Пожалуйста, подождите 15 секунд перед новым поиском.",
                rateLimitSlowdown: "Слишком много запросов! Теперь вы можете делать 1 запрос каждые 3 секунды.",
                disclaimer: "Данный сайт никак не связан с корпорацией Google, и не производится ей. Все ответы делаются нейросетью и не могут быть верны на 100%."
            }
        };

        // Countries where Russian should be default
        const russianSpeakingCountries = ['RU', 'BY', 'UA', 'KZ'];

        // Language functions
        function initLanguage() {
            const langCookie = getCookie('lang');
            
            if (langCookie && (langCookie === 'en' || langCookie === 'ru')) {
                setLanguage(langCookie);
            } else {
                detectLanguageByIP();
            }
        }

        function detectLanguageByIP() {
            fetch('https://ipapi.co/json/')
                .then(response => response.json())
                .then(data => {
                    const countryCode = data.country;
                    const defaultLang = russianSpeakingCountries.includes(countryCode) ? 'ru' : 'en';
                    setLanguage(defaultLang);
                    setCookie('lang', defaultLang, 3);
                })
                .catch(() => {
                    setLanguage('en');
                    setCookie('lang', 'en', 3);
                });
        }

        function setLanguage(lang) {
            if (!translations[lang]) lang = 'en';
            
            // UI elements
            const elementsToUpdate = {
                'page-title': translations[lang].pageTitle,
                'search-input': translations[lang].searchPlaceholder,
                'loading-text': translations[lang].loadingText,
                'load-more-button': translations[lang].loadMore,
                'disclaimer': translations[lang].disclaimer
            };

            for (const [id, text] of Object.entries(elementsToUpdate)) {
                const element = document.getElementById(id);
                if (element) {
                    if (id === 'search-input') {
                        element.placeholder = text;
                    } else {
                        element.textContent = text;
                    }
                }
            }

            // Language switcher
            const languageSwitcher = document.getElementById('language-switcher');
            if (languageSwitcher) {
                languageSwitcher.innerHTML = lang === 'en' 
                    ? `<button onclick="switchLanguage('ru')">${translations.en.switchToRussian}</button>`
                    : `<button onclick="switchLanguage('en')">${translations.ru.switchToEnglish}</button>`;
            }
        }